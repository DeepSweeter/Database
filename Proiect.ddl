-- Generated by Oracle SQL Developer Data Modeler 22.2.0.165.1149
--   at:        2022-12-16 12:29:25 EET
--   site:      Oracle Database 12c
--   type:      Oracle Database 12c



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE categorie (
    id_cat       NUMBER(2) NOT NULL,
    denumire_cat VARCHAR2(20) NOT NULL,
    descriere    VARCHAR2(300)
);

ALTER TABLE categorie
    ADD CONSTRAINT cat_denumire_ck CHECK ( length(denumire_cat) > 3
                                           AND REGEXP_LIKE ( denumire_cat,
                                                             '^+[ [:alpha:]_]+$' ) );

ALTER TABLE categorie ADD CONSTRAINT categorie_pk PRIMARY KEY ( id_cat );

ALTER TABLE categorie ADD CONSTRAINT cat_denumire_uk UNIQUE ( denumire_cat );

CREATE TABLE detalii (
    id_desc   NUMBER(4) NOT NULL,
    descriere VARCHAR2(300),
    poza      VARCHAR2(255)
);

ALTER TABLE detalii
    ADD CONSTRAINT detalii_poza_ck CHECK ( REGEXP_LIKE ( poza,
                                                         '^(http(s)*://)*[a-z0-9.-]+$' ) );

ALTER TABLE detalii ADD CONSTRAINT detalii_pk PRIMARY KEY ( id_desc );

CREATE TABLE prod_prop (
    id_prod_prop NUMBER(5) NOT NULL,
    id_prod      NUMBER(3) NOT NULL,
    id_prop      NUMBER(4) NOT NULL,
    id_val_prop  NUMBER(4) NOT NULL
);

ALTER TABLE prod_prop ADD CONSTRAINT prod_prop_pk PRIMARY KEY ( id_prod_prop );

CREATE TABLE producator (
    id_producator       NUMBER(2) NOT NULL,
    denumire_producator VARCHAR2(20) NOT NULL,
    tara_producator     VARCHAR2(20),
    descriere           VARCHAR2(300)
);

ALTER TABLE producator
    ADD CONSTRAINT producator_denumire_ck CHECK ( length(denumire_producator) > 3
                                                  AND REGEXP_LIKE ( denumire_producator,
                                                                    '^+[ [:alpha:]_]+$' ) );

ALTER TABLE producator
    ADD CONSTRAINT producator_tara_ck CHECK ( REGEXP_LIKE ( tara_producator,
                                                            '[[:alpha:]]+$' ) );

ALTER TABLE producator ADD CONSTRAINT producator_pk PRIMARY KEY ( id_producator );

ALTER TABLE producator ADD CONSTRAINT producator_denumire_uk UNIQUE ( denumire_producator );

CREATE TABLE produse (
    id_prod       NUMBER(3) NOT NULL,
    denumire_prod VARCHAR2(50) NOT NULL,
    pret          NUMBER(7, 2) NOT NULL,
    stoc          NUMBER(4) NOT NULL,
    id_sub        NUMBER(2),
    id_producator NUMBER(2),
    id_desc       NUMBER(4) NOT NULL
);

ALTER TABLE produse
    ADD CONSTRAINT produse_denumire_ck CHECK ( length(denumire_prod) > 1
                                               AND REGEXP_LIKE ( denumire_prod,
                                                                 '^+[ [:alnum:]_]+$' ) );

CREATE UNIQUE INDEX produse__idx ON
    produse (
        id_desc
    ASC );

ALTER TABLE produse ADD CONSTRAINT produse_pk PRIMARY KEY ( id_prod );

ALTER TABLE produse ADD CONSTRAINT produse_denumire_uk UNIQUE ( denumire_prod );

CREATE TABLE proprietati (
    id_prop       NUMBER(4) NOT NULL,
    denumire_prop VARCHAR2(40) NOT NULL
);

ALTER TABLE proprietati
    ADD CONSTRAINT proprietati_denumire_ck CHECK ( length(denumire_prop) > 1
                                                   AND REGEXP_LIKE ( denumire_prop,
                                                                     '^+[ [:alnum:]_]+$' ) );

ALTER TABLE proprietati ADD CONSTRAINT proprietati_pk PRIMARY KEY ( id_prop );

ALTER TABLE proprietati ADD CONSTRAINT proprietati_denumire_uk UNIQUE ( denumire_prop );

CREATE TABLE subcategorie (
    id_sub       NUMBER(2) NOT NULL,
    id_cat       NUMBER(2),
    denumire_sub VARCHAR2(30) NOT NULL,
    descriere    VARCHAR2(300)
);

ALTER TABLE subcategorie
    ADD CONSTRAINT subcat_denumire_ck CHECK ( length(denumire_sub) > 3
                                              AND REGEXP_LIKE ( denumire_sub,
                                                                '^+[ [:alpha:]_]+$' ) );

ALTER TABLE subcategorie ADD CONSTRAINT subcategorie_pk PRIMARY KEY ( id_sub );

ALTER TABLE subcategorie ADD CONSTRAINT subcat_denumire_uk UNIQUE ( denumire_sub );

CREATE TABLE val_prop (
    id_val_prop NUMBER(4) NOT NULL,
    valoare     VARCHAR2(20) NOT NULL
);

ALTER TABLE val_prop
    ADD CONSTRAINT val_prop_valoar_ck CHECK ( length(valoare) > 1
                                              AND REGEXP_LIKE ( valoare,
                                                                '^[ [:alnum:]_''\.\-]+$' ) );

ALTER TABLE val_prop ADD CONSTRAINT val_prop_pk PRIMARY KEY ( id_val_prop );

ALTER TABLE val_prop ADD CONSTRAINT val_prop_valoare_uk UNIQUE ( valoare );

ALTER TABLE subcategorie
    ADD CONSTRAINT relation_1 FOREIGN KEY ( id_cat )
        REFERENCES categorie ( id_cat );

ALTER TABLE prod_prop
    ADD CONSTRAINT relation_10 FOREIGN KEY ( id_prop )
        REFERENCES proprietati ( id_prop );

ALTER TABLE prod_prop
    ADD CONSTRAINT relation_11 FOREIGN KEY ( id_val_prop )
        REFERENCES val_prop ( id_val_prop );

ALTER TABLE produse
    ADD CONSTRAINT relation_2 FOREIGN KEY ( id_sub )
        REFERENCES subcategorie ( id_sub );

ALTER TABLE produse
    ADD CONSTRAINT relation_4 FOREIGN KEY ( id_desc )
        REFERENCES detalii ( id_desc );

ALTER TABLE produse
    ADD CONSTRAINT relation_6 FOREIGN KEY ( id_producator )
        REFERENCES producator ( id_producator );

ALTER TABLE prod_prop
    ADD CONSTRAINT relation_9 FOREIGN KEY ( id_prod )
        REFERENCES produse ( id_prod );

CREATE SEQUENCE categorie_id_cat_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER categorie_id_cat_trg BEFORE
    INSERT ON categorie
    FOR EACH ROW
    WHEN ( new.id_cat IS NULL )
BEGIN
    :new.id_cat := categorie_id_cat_seq.nextval;
END;
/

CREATE SEQUENCE detalii_id_desc_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER detalii_id_desc_trg BEFORE
    INSERT ON detalii
    FOR EACH ROW
    WHEN ( new.id_desc IS NULL )
BEGIN
    :new.id_desc := detalii_id_desc_seq.nextval;
END;
/

CREATE SEQUENCE prod_prop_id_prod_prop_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER prod_prop_id_prod_prop_trg BEFORE
    INSERT ON prod_prop
    FOR EACH ROW
    WHEN ( new.id_prod_prop IS NULL )
BEGIN
    :new.id_prod_prop := prod_prop_id_prod_prop_seq.nextval;
END;
/

CREATE SEQUENCE producator_id_producator_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER producator_id_producator_trg BEFORE
    INSERT ON producator
    FOR EACH ROW
    WHEN ( new.id_producator IS NULL )
BEGIN
    :new.id_producator := producator_id_producator_seq.nextval;
END;
/

CREATE SEQUENCE produse_id_prod_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER produse_id_prod_trg BEFORE
    INSERT ON produse
    FOR EACH ROW
    WHEN ( new.id_prod IS NULL )
BEGIN
    :new.id_prod := produse_id_prod_seq.nextval;
END;
/

CREATE SEQUENCE proprietati_id_prop_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER proprietati_id_prop_trg BEFORE
    INSERT ON proprietati
    FOR EACH ROW
    WHEN ( new.id_prop IS NULL )
BEGIN
    :new.id_prop := proprietati_id_prop_seq.nextval;
END;
/

CREATE SEQUENCE subcategorie_id_sub_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER subcategorie_id_sub_trg BEFORE
    INSERT ON subcategorie
    FOR EACH ROW
    WHEN ( new.id_sub IS NULL )
BEGIN
    :new.id_sub := subcategorie_id_sub_seq.nextval;
END;
/

CREATE SEQUENCE val_prop_id_val_prop_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER val_prop_id_val_prop_trg BEFORE
    INSERT ON val_prop
    FOR EACH ROW
    WHEN ( new.id_val_prop IS NULL )
BEGIN
    :new.id_val_prop := val_prop_id_val_prop_seq.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             8
-- CREATE INDEX                             1
-- ALTER TABLE                             29
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           8
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          8
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- TSDP POLICY                              0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
